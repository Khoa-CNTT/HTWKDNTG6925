@{
    Layout = null;
}
<div id="chat-container" style="
    border: 2px solid #007bff;
    border-radius: 12px;
    padding: 20px;
    background-color: #fff;
    box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    max-width: 950px;
    width: 100%;
    margin: 20px auto;
    font-family: 'Segoe UI', sans-serif;
">
    <h4 style="text-align: center;">💬 ChatBot Gợi ý sản phẩm</h4>

    <div id="chat-box" style="
        height: 400px;
        overflow-y: auto;
        border: 1px solid #ccc;
        padding: 12px;
        background: #f9f9f9;
        border-radius: 8px;
        margin-bottom: 16px;
    ">
        <!-- Tin nhắn chào mừng -->
        <div class="bot-message">
            <div class="message-content">
                <span class="bot-avatar">🤖</span>
                <div class="message-text">
                    Chào bạn! Tôi là trợ lý tư vấn nội thất. Tôi có thể giúp bạn tìm kiếm sản phẩm phù hợp với nhu cầu. Hãy mô tả những gì bạn đang tìm kiếm nhé! 😊
                </div>
            </div>
        </div>
    </div>

    <div style="display: flex; gap: 10px; align-items: center;">
        <input type="text" id="user-input" class="form-control" placeholder="VD: Tôi muốn mua bàn trang điểm..."
               style="flex: 1; height: 45px; border-radius: 20px; border: 1px solid #ddd; padding: 0 15px;"
               onkeypress="if(event.keyCode==13) sendMessage()" />
        <button class="btn btn-primary" onclick="sendMessage()" style="
            padding: 12px 20px;
            border-radius: 20px;
            border: none;
            background: linear-gradient(45deg, #007bff, #0056b3);
            box-shadow: 0 2px 10px rgba(0,123,255,0.3);
        ">
            <span id="send-text">Gửi</span>
            <span id="loading-spinner" style="display: none;">⏳</span>
        </button>
    </div>
</div>

<style>
    .user-message {
        margin: 15px 0;
        display: flex;
        justify-content: flex-end;
    }

        .user-message .message-bubble {
            background: linear-gradient(45deg, #007bff, #0056b3);
            color: white;
            padding: 12px 16px;
            border-radius: 18px 18px 5px 18px;
            max-width: 70%;
            font-weight: 500;
            box-shadow: 0 2px 8px rgba(0,123,255,0.3);
        }

    .bot-message {
        margin: 15px 0;
        display: flex;
        justify-content: flex-start;
    }

    .message-content {
        display: flex;
        align-items: flex-start;
        gap: 10px;
        max-width: 85%;
    }

    .bot-avatar {
        font-size: 24px;
        flex-shrink: 0;
    }

    .message-text {
        background: white;
        padding: 12px 16px;
        border-radius: 18px 18px 18px 5px;
        border: 1px solid #e0e0e0;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        line-height: 1.4;
    }

    .product-grid {
        display: grid;
        gap: 12px;
        margin-top: 10px;
    }

    .product-card {
        display: flex;
        align-items: center;
        background: white;
        border: 1px solid #e0e0e0;
        border-radius: 12px;
        padding: 12px;
        gap: 12px;
        transition: all 0.3s ease;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

        .product-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.15);
            border-color: #007bff;
        }

    .product-image {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 8px;
        flex-shrink: 0;
    }

    .product-info {
        flex: 1;
        min-width: 0;
    }

    .product-name {
        font-weight: 600;
        font-size: 14px;
        color: #333;
        margin-bottom: 4px;
        line-height: 1.3;
    }

    .product-price {
        color: #28a745;
        font-weight: 600;
        font-size: 15px;
        margin-bottom: 6px;
    }

    .product-details {
        font-size: 12px;
        color: #666;
        margin-bottom: 8px;
    }

    .discount-badge {
        background: #ff4757;
        color: white;
        padding: 2px 6px;
        border-radius: 4px;
        font-size: 11px;
        font-weight: 600;
        margin-left: 8px;
    }

    .view-detail-btn {
        display: inline-block;
        background: #007bff;
        color: white;
        padding: 6px 12px;
        font-size: 12px;
        border-radius: 6px;
        text-decoration: none;
        transition: background 0.3s ease;
    }

        .view-detail-btn:hover {
            background: #0056b3;
            color: white;
            text-decoration: none;
        }

    #chat-box::-webkit-scrollbar {
        width: 6px;
    }

    #chat-box::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    #chat-box::-webkit-scrollbar-thumb {
        background: #c1c1c1;
        border-radius: 10px;
    }

        #chat-box::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }

    .typing-indicator {
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 12px 16px;
        background: white;
        border-radius: 18px 18px 18px 5px;
        border: 1px solid #e0e0e0;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .typing-dots {
        display: flex;
        gap: 4px;
    }

        .typing-dots span {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: #007bff;
            animation: typing 1.4s infinite ease-in-out;
        }

            .typing-dots span:nth-child(1) {
                animation-delay: 0s;
            }

            .typing-dots span:nth-child(2) {
                animation-delay: 0.2s;
            }

            .typing-dots span:nth-child(3) {
                animation-delay: 0.4s;
            }

    keyframes typing {
        0%, 60%, 100%

    {
        transform: translateY(0);
        opacity: 0.5;
    }

    30% {
        transform: translateY(-10px);
        opacity: 1;
    }
    }
</style>

<script>
    let isTyping = false;

    function sendMessage() {
        if (isTyping) return;

        const message = $('#user-input').val().trim();
        if (!message) return;

        // Hiển thị tin nhắn người dùng
        addUserMessage(message);
        $('#user-input').val('');

        // Hiển thị trạng thái typing
        showTypingIndicator();
        setLoadingState(true);

        $.post('/ChatBot/SendMessage', { message: message })
            .done(function (response) {
                hideTypingIndicator();

                if (response.isNaturalReply) {
                    // Trả lời tự nhiên
                    addBotMessage(response.reply);
                } else if (response.isProductSuggestion && response.products) {
                    // Gợi ý sản phẩm
                    addBotMessage(response.reply);
                    addProductGrid(response.products);
                } else {
                    // Fallback cho format cũ
                    handleLegacyResponse(response);
                }
            })
            .fail(function () {
                hideTypingIndicator();
                addBotMessage("Xin lỗi, có lỗi xảy ra. Vui lòng thử lại sau! 😔");
            })
            .always(function () {
                setLoadingState(false);
                scrollToBottom();
            });
    }

    function addUserMessage(message) {
        const userHtml = `
        <div class="user-message">
            <div class="message-bubble">${escapeHtml(message)}</div>
        </div>
    `;
        $('#chat-box').append(userHtml);
        scrollToBottom();
    }

    function addBotMessage(message) {
        const botHtml = `
        <div class="bot-message">
            <div class="message-content">
                <span class="bot-avatar">🤖</span>
                <div class="message-text">${escapeHtml(message)}</div>
            </div>
        </div>
    `;
        $('#chat-box').append(botHtml);
    }

    function addProductGrid(products) {
        if (!products || products.length === 0) return;

        const gridHtml = `
        <div class="bot-message">
            <div class="message-content">
                <span class="bot-avatar">🛍️</span>
                <div class="product-grid">
                    ${products.map(product => createProductCard(product)).join('')}
                </div>
            </div>
        </div>
    `;
        $('#chat-box').append(gridHtml);
    }

    function createProductCard(product) {
        const imageUrl = "/image/" + (product.image || "placeholder.jpg");
        const discountBadge = product.discount && product.discount > 0
            ? `<span class="discount-badge">-${product.discount}%</span>`
            : '';

        return `
        <div class="product-card">
            <img src="${imageUrl}" alt="${escapeHtml(product.name)}" class="product-image"
                 onerror="this.src='/image/placeholder.jpg'" />
            <div class="product-info">
                <div class="product-name">${escapeHtml(product.name)}</div>
                <div class="product-price">
                    ${escapeHtml(product.price)} ₫${discountBadge}
                </div>
                ${product.dimensions ? `<div class="product-details">📏 ${escapeHtml(product.dimensions)}</div>` : ''}
                <a href="/Product/DetailProduct/${product.id}" target="_blank" class="view-detail-btn">
                    Xem chi tiết →
                </a>
            </div>
        </div>
    `;
    }

    function handleLegacyResponse(response) {
        try {
            const parsed = JSON.parse(response.reply);
            if (Array.isArray(parsed)) {
                addBotMessage("Tôi đã tìm được một số sản phẩm phù hợp:");
                addProductGrid(parsed.map(p => ({
                    id: p.id,
                    name: p.name,
                    image: p.image,
                    price: p.price,
                    dimensions: null,
                    discount: null
                })));
            } else {
                addBotMessage(response.reply);
            }
        } catch {
            addBotMessage(response.reply);
        }
    }

    function showTypingIndicator() {
        if (isTyping) return;
        isTyping = true;

        const typingHtml = `
        <div class="bot-message typing-message">
            <div class="message-content">
                <span class="bot-avatar">🤖</span>
                <div class="typing-indicator">
                    <span>Đang suy nghĩ</span>
                    <div class="typing-dots">
                        <span></span>
                        <span></span>
                        <span></span>
                    </div>
                </div>
            </div>
        </div>
    `;
        $('#chat-box').append(typingHtml);
        scrollToBottom();
    }

    function hideTypingIndicator() {
        $('.typing-message').remove();
        isTyping = false;
    }

    function setLoadingState(loading) {
        if (loading) {
            $('#send-text').hide();
            $('#loading-spinner').show();
            $('#user-input').prop('disabled', true);
        } else {
            $('#send-text').show();
            $('#loading-spinner').hide();
            $('#user-input').prop('disabled', false).focus();
        }
    }

    function scrollToBottom() {
        const chatBox = $('#chat-box')[0];
        setTimeout(() => {
            chatBox.scrollTop = chatBox.scrollHeight;
        }, 100);
    }

    function escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    // Focus vào input khi load trang
    $(document).ready(function () {
        $('#user-input').focus();
    });
</script>