@model WebsiteNoiThat.Models.ProductViewModel

@{
    ViewBag.Title = "Thêm sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Thêm sản phẩm</h2>

@using (Html.BeginForm("Add", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Tên sản phẩm -->
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Danh mục -->
        <div class="form-group">
            @Html.LabelFor(model => model.CateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CateId, ViewBag.ListCate as SelectList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Giá -->
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Số lượng -->
        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Nhà cung cấp -->
        <div class="form-group">
            @Html.LabelFor(model => model.ProviderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProviderId, ViewBag.ListProvider as SelectList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProviderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Mô tả -->
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { rows = "5", cols = "120" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Ảnh -->
        <div class="form-group">
            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control", @id = "PhotoLink" } })
                <input type="file" id="UploadImage" name="UploadImage" onchange="setImagePath()" />
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <script>
            function setImagePath() {
                var fileInput = document.getElementById('UploadImage');
                var photoLink = document.getElementById('PhotoLink');

                if (fileInput.files.length > 0) {
                    var fileName = fileInput.files[0].name;
                    photoLink.value = '/image/' + fileName;
                }
            }
        </script>

        <!-- Khuyến mãi -->
        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", @id = "Discount" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Ngày bắt đầu -->
        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.StartDate, "{0:yyyy-MM-dd}", new { @type = "date", @id = "StartDate", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Ngày kết thúc -->
        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EndDate, "{0:yyyy-MM-dd}", new { @type = "date", @id = "EndDate", @class = "form-control" })
                @Html.ValidationMessage("ErrorDate", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Nút submit -->
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm sản phẩm" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<!-- Script kiểm tra logic khuyến mãi -->
<script>
    document.querySelector("form").addEventListener("submit", function (e) {
        var discount = document.getElementById("Discount").value.trim();
        var startDate = document.getElementById("StartDate").value.trim();
        var endDate = document.getElementById("EndDate").value.trim();

        if (discount && parseFloat(discount) > 0) {
            if (!startDate || !endDate) {
                alert("Vui lòng chọn ngày bắt đầu và kết thúc khuyến mãi.");
                e.preventDefault();
            }
        } else {
            if (startDate || endDate) {
                alert("Không được nhập ngày nếu không có khuyến mãi.");
                e.preventDefault();
            }
        }
    });
</script>
