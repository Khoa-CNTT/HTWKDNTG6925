@model WebsiteNoiThat.Models.ProductViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Sửa sản phẩm </h2>

@using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { enctype = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    <p style="text-align:center;">
        <img id="cur_img" style="height:200px" src="@Url.Content("~/image/" + @Model.Photo)" alt="">
    </p>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductId)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CateId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CateId, ViewBag.ListCate as SelectList, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CateId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProviderId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ProviderId, ViewBag.ListProvider as SelectList, new { htmlAttributes = new { @class = "form-control", } })
            @Html.ValidationMessageFor(model => model.ProviderId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { rows = "5", cols = "120", })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <!-- Ô nhập link ảnh -->
            @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control", @id = "PhotoLink" } })

            <!-- Ô chọn ảnh -->
            <input type="file" id="UploadImage" name="UploadImage" onchange="setImagePath()" />

            @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
        </div>
    </div>

    <script>
        function setImagePath() {
            var fileInput = document.getElementById('UploadImage');
            var photoLink = document.getElementById('PhotoLink');

            if (fileInput.files.length > 0) {
                // Lấy tên file
                var fileName = fileInput.files[0].name;
                // Gán tên file vào ô nhập link ảnh
                photoLink.value = '/image/' + fileName;
            }
        }</script>
    <!-- Chiều dài -->
    <div class="form-group">
        @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Chiều rộng -->
    <div class="form-group">
        @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Chiều cao -->
    <div class="form-group">
        @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", } })
            @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.StartDate, "{0:yyyy-MM-dd}", new { @type = "date" })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.EndDate, "{0:yyyy-MM-dd}", new { @type = "date" })
            @Html.ValidationMessage("ErrorDate", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success btn-lg animated-button">
                <i class="glyphicon glyphicon-floppy-disk"></i> Lưu
            </button>
            <a href="@Url.Action("Show", "Product", new { area = "Admin" })" class="btn btn-danger btn-lg animated-button" style="margin-left: 10px;">
                <i class="glyphicon glyphicon-remove-circle"></i> Huỷ bỏ
            </a>
        </div>
    </div>

</div>
}

<style>
    .animated-button {
        transition: all 0.3s ease-in-out;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

        .animated-button:hover {
            transform: scale(1.08);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
            cursor: pointer;
        }

        .animated-button:focus {
            outline: none;
        }
</style>
